# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule .Api.Usage do
  @moduledoc """
  API calls for all endpoints tagged `Usage`.
  """

  alias .Connection
  import .RequestBuilder


  @doc """
  Get an Account's current Usage Billing Rate Adjustments
  Get an Account's current Usage Billing Rate Adjustments

  ## Parameters

  - connection (.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, .Model.AccountUsageBillingAdjustmentsResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec accounts_account_id_usage_get(Tesla.Env.client, keyword()) :: {:ok, .Model.AccountUsageBillingAdjustmentsResponse.t} | {:ok, .Model.ErrorResponse.t} | {:error, Tesla.Env.t}
  def accounts_account_id_usage_get(connection, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/accounts/:accountId/usage")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %.Model.AccountUsageBillingAdjustmentsResponse{}},
      { 400, %.Model.ErrorResponse{}},
      { 401, %.Model.ErrorResponse{}},
      { 404, %.Model.ErrorResponse{}},
      { 500, %.Model.ErrorResponse{}}
    ])
  end

  @doc """
  Set an Account's Usage Billing Rate
  Set an Account's Usage Billing Rate

  ## Parameters

  - connection (.Connection): Connection to server
  - post_account_usage_billing_rate_adjustment_request (PostAccountUsageBillingRateAdjustmentRequest): 
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, map()} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec accounts_account_id_usage_post(Tesla.Env.client, .Model.PostAccountUsageBillingRateAdjustmentRequest.t, keyword()) :: {:ok, Map.t} | {:ok, .Model.ErrorResponse.t} | {:error, Tesla.Env.t}
  def accounts_account_id_usage_post(connection, post_account_usage_billing_rate_adjustment_request, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/accounts/:accountId/usage")
    |> add_param(:body, :body, post_account_usage_billing_rate_adjustment_request)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %{}},
      { 400, %.Model.ErrorResponse{}},
      { 401, %.Model.ErrorResponse{}},
      { 404, %.Model.ErrorResponse{}},
      { 500, %.Model.ErrorResponse{}}
    ])
  end
end
